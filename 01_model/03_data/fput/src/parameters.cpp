
// ==============================================================================
// 
// Copyright or © or Copr:
//     Antoine Falaize
// 
// Affiliation:
//     Team M2N (Mathematical and Numerical Methods),
//     Laboratoire des Sciences de l'Ingénieur pour l'Environnement (LaSIE),
//     UMR CNRS 7356, La Rochelle Université,
//     La Rochelle, France.
// 
// Contact:
//     antoine.falaize@univ-lr.fr
// 
// This file has been generated by the Python software PyPHS, which purpose
// is to model and simulate multiphysical systems in the Port-Hamiltonian
// formalism. See the website at the following url:
// "https://pyphs.github.io/pyphs/".
// 
// Created on:
//     2020/07/08 10:56:28
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// A copy of the GNU General Public License is available at the following url:
// "https://www.gnu.org/licenses/"
// 
// ==============================================================================
# include "parameters.h"

// Correspondance is
// subs[key][0] = m_L1
// subs[key][1] = m_L2
// subs[key][2] = m_L3
// subs[key][3] = m_L4
// subs[key][4] = m_L5
// subs[key][5] = m_L6
// subs[key][6] = m_L7
// subs[key][7] = m_R1
// subs[key][8] = m_R2
// subs[key][9] = m_R3
// subs[key][10] = m_R4
// subs[key][11] = m_R5
// subs[key][12] = m_R6
// subs[key][13] = m_R7
// subs[key][14] = k_1
// subs[key][15] = k_2
// subs[key][16] = k_3
// subs[key][17] = k_4
// subs[key][18] = k_5
// subs[key][19] = k_6
// subs[key][20] = k_7


const double subs[1][21] = {     
    //==========================================================================
    // key 0
    {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
};